#pragma once

typedef enum _OBJECT_TYPE_ENUM {
				OBJECT_TYPE_DIRECTORY,
				OBJECT_TYPE_THREAD,
				OBJECT_TYPE_PROCESS,
				OBJECT_TYPE_SECTION,
				NUM_OBJECT_TYPES
} OBJECT_TYPE_ENUM;

typedef NTSTATUS (*OB_OBJECT_CREATE_METHOD)(PVOID);
typedef NTSTATUS (*OB_OBJECT_OPEN_METHOD)(PVOID);
typedef NTSTATUS (*OB_OBJECT_CLOSE_METHOD)(PVOID);

typedef struct _OBJECT_TYPE_INITIALIZER {
    OB_OBJECT_CREATE_METHOD CreateProc;
    OB_OBJECT_OPEN_METHOD OpenProc;
    OB_OBJECT_CLOSE_METHOD CloseProc;
} OBJECT_TYPE_INITIALIZER, *POBJECT_TYPE_INITIALIZER;

typedef struct _OBJECT_TYPE {
    PCSTR Name;
    OBJECT_TYPE_ENUM Index;
    ULONG ObjectBodySize;
    OBJECT_TYPE_INITIALIZER TypeInfo;
} OBJECT_TYPE, *POBJECT_TYPE;

typedef struct _OBJECT_HEADER {
    POBJECT_TYPE Type;
    MWORD HandleCount;
    PHANDLE Handles;
} OBJECT_HEADER, *POBJECT_HEADER;

/* create.c */
NTSTATUS ObCreateObjectType(IN OBJECT_TYPE_ENUM Type,
			    IN PCSTR TypeName,
			    IN ULONG ObjectBodySize,
			    IN OBJECT_TYPE_INITIALIZER Init);
NTSTATUS ObCreateObject(IN OBJECT_TYPE_ENUM Type,
			OUT PVOID *Object);
