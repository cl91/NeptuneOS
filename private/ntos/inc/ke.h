#pragma once

#include <nt.h>
#include <sel4/sel4.h>
#include <printf.h>
#include "mm.h"

#define NTOS_KE_TAG			(EX_POOL_TAG('n','t','k','e'))

VOID KeRunAllTests();

VOID KeBugCheckMsg(IN PCSTR Format, ...);

VOID KeBugCheck(IN PCSTR Function,
		IN PCSTR File,
		IN ULONG Line,
		IN ULONG Error);

#define BUGCHECK_IF_ERR(Expr)	{NTSTATUS Error = (Expr); if (!NT_SUCCESS(Error)) { \
	    KeBugCheck(__func__, __FILE__, __LINE__, Error);}}

#define LoopOverUntyped(cap, desc, bootinfo)				\
    for (MWORD cap = bootinfo->untyped.start;				\
	 cap < bootinfo->untyped.end; cap++)				\
	for (seL4_UntypedDesc *desc =					\
		 &bootinfo->untypedList[cap - bootinfo->untyped.start]; \
	     desc != NULL; desc = NULL)

#define ENDPOINT_RIGHTS_WRITE_GRANTREPLY	seL4_CapRights_new(1, 0, 0, 1)

typedef struct _IPC_ENDPOINT {
    CAP_TREE_NODE TreeNode;
    MWORD Badge;
} IPC_ENDPOINT, *PIPC_ENDPOINT;

typedef struct _X86_IOPORT {
    CAP_TREE_NODE TreeNode; /* capability with which to invoke seL4_X86_IOPort_* */
    USHORT PortNum;	    /* port number */
} X86_IOPORT, *PX86_IOPORT;

#define VGA_BLUE			(1)
#define VGA_WHITE			(15)
#define VGA_BG_COLOR			(VGA_BLUE << 4)
#define VGA_FG_COLOR			(VGA_WHITE)
#define VGA_TEXT_COLOR			(VGA_BG_COLOR | VGA_FG_COLOR)

/* services.c */
struct _PROCESS;
struct _THREAD;
NTSTATUS KeEnableSystemServices(IN struct _PROCESS *Process,
				IN struct _THREAD *Thread);

/* port.c */
NTSTATUS KeEnableIoPortX86(IN PCNODE CSpace,
			   IN USHORT PortNum,
			   IN PX86_IOPORT IoPort);

/* vga.c */
VOID KeVgaWriteStringEx(UCHAR Color, PCSTR String);

static inline VOID KeVgaWriteString(PCSTR String)
{
    KeVgaWriteStringEx(VGA_TEXT_COLOR, String);
}

static inline __attribute__((format(printf, 1, 2))) VOID KeVgaPrint(PCSTR Format, ...)
{
    char buf[512];
    va_list arglist;
    va_start(arglist, Format);
    vsnprintf(buf, sizeof(buf), Format, arglist);
    va_end(arglist);
    KeVgaWriteString(buf);
}

/* Generated by syssvc-gen.py */
#include <ntos_syssvc_gen.h>
